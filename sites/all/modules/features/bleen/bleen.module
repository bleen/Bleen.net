<?php

include_once('bleen.features.inc');

/**
 * Implements hook_theme().
 */
function bleen_theme() {
  return array(
    'bleen_social_network_links' => array(
      'variables' => array('links' => array(), 'attributes' => array()),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function bleen_block_info() {
  $blocks = array();
  $blocks['bleen_definition'] = array(
    'info'    => t('Definition of Bleen'),
    'cache'   => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function bleen_block_view($delta) {
  $block = array();
  switch ($delta) {
    case 'bleen_definition':
      $block['subject'] = t('What is Bleen?');
      $block['content'] = array('#markup' => variable_get('bleen_definition', ''));
      break;
  }

  return $block;
}

/**
 * Implements hook_wysiwyg_editor_settings_alter().
 * @see http://drupal.org/node/829266#comment-3978944
 */
function bleen_wysiwyg_editor_settings_alter(&$settings, $context) {

  if ($context['profile']->editor == 'ckeditor') {
    // The layout we'd want to use if all buttons were enabled.
    // This example uses all buttons on one row, but separate them into groups
    // that will wrap as one.
    $toolbar = array(
      array( // Row
        array('Bold', 'Italic', 'Underline', 'Strike',), // Group
        array('JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock',),
        array('BulletedList', 'NumberedList',),
        array('Outdent', 'Indent',),
        array('Undo', 'Redo',),
        array('Link', 'Unlink', 'Anchor',),
        array('Superscript', 'Subscript',),
        array('Cut', 'Copy', 'Paste',),
        array('PasteText', 'PasteFromWord',),
        array('TextColor', 'BGColor', 'RemoveFormat',),
        array('Format', 'Font', 'FontSize', 'Styles',),
        array('ShowBlocks', 'SpecialChar',),
        array('SelectAll', 'Find', 'Replace',),
        array('Image', 'Flash', 'Smiley', 'Table', 'CreateDiv',),
        array('Maximize', 'SpellChecker', 'Scayt',),
        array('Blockquote', 'Source', 'HorizontalRule',),
      ),
    );

    $original_toolbar = $settings['toolbar'][0];
    $r_key = 0;
    while ($r_key < count($toolbar)) {
      $row = &$toolbar[$r_key];

      // Loop through groups.
      $g_key = 0;
      while ($g_key < count($row)) {
        $group = &$row[$g_key];
        if (is_array($group)) {

          // Loop through buttons.
          $i_key = 0;
          while ($i_key < count($group)) {
            $item = &$group[$i_key];
            if (($found_key = array_search($item, $original_toolbar)) !== FALSE) {
              unset($original_toolbar[$found_key]);
            }
            else {
              $cut =array_splice($toolbar[$r_key][$g_key], $i_key, 1);
              $i_key -= 1;
            }
            $i_key += 1;
          }

          // Remove empty groups.
          if (count($group) == 0) {
            array_splice($toolbar[$r_key], $g_key, 1);
            $g_key -= 1;
          }
        }
        $g_key += 1;
      }
      $r_key += 1;
    }

    if (count($original_toolbar) > 0) {
      $last_row = count($toolbar) -1;
      $extra_group = array();
      foreach ($original_toolbar as $item) {
        $extra_group[] = $item;
      }
      array_push($toolbar[$last_row], $extra_group);
    }

    $joined_toolbar = array();
    foreach ($toolbar as $row) {
      foreach($row as $grp){
        $joined_toolbar[] = $grp;
      }
      $joined_toolbar[] = '/';
    }
    array_pop($joined_toolbar);

    // Replace the old toolbar with our new shiny one.
    $settings['toolbar'] = $joined_toolbar;
  }
}

/**
 * Implements hook_contextual_links_view_alter().
 */
function bleen_contextual_links_view_alter(&$element, &$items) {
  // This hook is called for EVERY set of contextual links on a page.  We first
  // want to check the $element to make sure we are adding a link to the correct
  // list of contextual links. In this case we only want to add a link to blocks
  // created by the "search" module. We just add links using the same array
  // structure as is used by theme_links.
  // Note: changed $element to $element['#element'] and make URLs absolute.
  if (isset($element['#element']['#block'])) {
    switch ($element['#element']['#block']->module) {
      case 'bleen':
        if ($element['#element']['#block']->delta == "bleen_definition") {
          $element['#links']['bleen'] = array(
            'title' => 'Edit definition',
            'href' => url('/admin/config/system/site-information', array('absolute' => TRUE)),
          );
        }
        break;
      case 'views':
        if ($element['#element']['#block']->delta == "site_tweets-site_tweets_block") {
          $element['#links']['bleen'] = array(
            'title' => 'Edit social network links',
            'href' => url('/admin/config/system/site-information', array('absolute' => TRUE)),
          );
        }
        break;
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function bleen_form_system_site_information_settings_alter(&$form, $form_state) {
  // Hide the site slogan field.
  $form['site_information']['site_slogan']['#access'] = FALSE;

  // Allow site administrator to edit the definition of bleen.
  $form['site_information']['bleen_definition'] = array(
    '#type'           => 'text_format',
    '#title'          => t('Definition of Bleen'),
    '#default_value'  => variable_get('bleen_definition', ''),
  );

  // Allow site administrator to add or edit the social network links associated
  // with bleen.net.
  $form['site_information']['bleen_social_networks'] = array(
    '#type'           => 'textarea',
    '#title'          => t('Social network links'),
    '#default_value'  => variable_get('bleen_social_networks', ''),
    '#description'    => t('Enter one social network link per line.') . '<br/>' . t('Ex: Title|http://www.link.com'),
  );

  $form['#submit'][] = 'bleen_form_system_site_information_submit';
}

/**
 * Form submit function.
 */
function bleen_form_system_site_information_submit($form, $form_state) {
  variable_set('bleen_definition', $form_state['values']['bleen_definition']['value']);
}

/**
 * Implements hook_block_view_alter().
 */
function bleen_block_view_alter(&$data, $block) {
  switch ($block->module) {
    case 'views':
      if ($block->delta == 'site_tweets-site_tweets_block') {
        $data['content'] = array(
          'content' => $data['content'],
          'social_network_links' => array(
            '#theme' => 'bleen_social_network_links',
            '#links' => _bleen_get_social_network_links(),
            '#attributes' => array('class' => array('social-network-links')),
          ),
        );
      }
      break;
  }
}

/**
 * Themes a list of social network links.
 */
function theme_bleen_social_network_links($variables) {
  $output = '';
  if (count($variables['links'])) {
    $output .= '<div' . drupal_attributes($variables['attributes']) . '>';
    foreach($variables['links'] as $link) {
      $output .= l($link['title'], $link['href'], array('attributes' => $link['attributes']));
    }
    $output .= '</div>';
  }

  return $output;
}

/**
 * Helper function to format the list of social network links.
 */
function _bleen_get_social_network_links() {
  $links = array();

  $lines = preg_split( '/\r\n|\r|\n/', variable_get('bleen_social_networks', ''));
  foreach($lines as $line) {
    list($title, $href) = explode('|', $line);
    $links[] = array(
      'title' => $title,
      'href' => $href,
      'attributes' => array('class' => array(drupal_html_class($title))),
    );
  }

  return $links;
}

